set -g default-terminal "screen-256color" # display 256 colors
set -g base-index 1                       # start windows numbering at 1
setw -g pane-base-index 1                 # make pane numbering consistent with windows

setw -g automatic-rename on               # rename window to reflect current program
set -g renumber-windows on                # renumber windows when a window is closed

set -g set-titles on                      # set terminal title

set -g display-panes-time 800             # slightly longer pane indicators display time
set -g display-time 1000                  # slightly longer status messages display time

set -g status-interval 10                 # redraw status line every 10 seconds

# clear both screen and history
bind -n C-l send-keys C-l \; run 'sleep 0.1' \; clear-history

set -g monitor-activity on
set -g visual-activity off

# find session
bind C-f command-prompt -p find-session 'switch-client -t %%'

bind -r h select-pane -L  # move left
bind -r j select-pane -D  # move down
bind -r k select-pane -U  # move up
bind -r l select-pane -R  # move right
bind > swap-pane -D       # swap current pane with the next one
bind < swap-pane -U       # swap current pane with the previous one

bind -r H resize-pane -L 2
bind -r J resize-pane -D 2
bind -r K resize-pane -U 2
bind -r L resize-pane -R 2

# -- list choice (tmux < 2.4) --------------------------------------------------

# vi-choice is gone in tmux >= 2.4
run -b 'tmux bind -t vi-choice h tree-collapse 2> /dev/null || true'
run -b 'tmux bind -t vi-choice l tree-expand 2> /dev/null || true'
run -b 'tmux bind -t vi-choice K start-of-list 2> /dev/null || true'
run -b 'tmux bind -t vi-choice J end-of-list 2> /dev/null || true'
run -b 'tmux bind -t vi-choice H tree-collapse-all 2> /dev/null || true'
run -b 'tmux bind -t vi-choice L tree-expand-all 2> /dev/null || true'
run -b 'tmux bind -t vi-choice Escape cancel 2> /dev/null || true'


# -- edit mode (tmux < 2.4) ----------------------------------------------------

# vi-edit is gone in tmux >= 2.4
run -b 'tmux bind -ct vi-edit H start-of-line 2> /dev/null || true'
run -b 'tmux bind -ct vi-edit L end-of-line 2> /dev/null || true'
run -b 'tmux bind -ct vi-edit q cancel 2> /dev/null || true'
run -b 'tmux bind -ct vi-edit Escape cancel 2> /dev/null || true'


# -- copy mode -----------------------------------------------------------------

bind Enter copy-mode # enter copy mode

run -b 'tmux bind -t vi-copy v begin-selection 2> /dev/null || true'
run -b 'tmux bind -T copy-mode-vi v send -X begin-selection 2> /dev/null || true'
run -b 'tmux bind -t vi-copy C-v rectangle-toggle 2> /dev/null || true'
run -b 'tmux bind -T copy-mode-vi C-v send -X rectangle-toggle 2> /dev/null || true'
run -b 'tmux bind -t vi-copy y copy-selection 2> /dev/null || true'
run -b 'tmux bind -T copy-mode-vi y send -X copy-selection-and-cancel 2> /dev/null || true'
run -b 'tmux bind -t vi-copy Escape cancel 2> /dev/null || true'
run -b 'tmux bind -T copy-mode-vi Escape send -X cancel 2> /dev/null || true'
run -b 'tmux bind -t vi-copy H start-of-line 2> /dev/null || true'
run -b 'tmux bind -T copy-mode-vi H send -X start-of-line 2> /dev/null || true'
run -b 'tmux bind -t vi-copy L end-of-line 2> /dev/null || true'
run -b 'tmux bind -T copy-mode-vi L send -X end-of-line 2> /dev/null || true'

# copy to Mac OSX clipboard
if -b 'command -v reattach-to-user-namespace > /dev/null 2>&1' 'bind y run -b "tmux save-buffer - | reattach-to-user-namespace pbcopy"'
# copy to X11 clipboard
if -b 'command -v xsel > /dev/null 2>&1' 'bind y run -b "tmux save-buffer - | xsel -i -b"'
if -b '! command -v xsel > /dev/null 2>&1 && command -v xclip > /dev/null 2>&1' 'bind y run -b "tmux save-buffer - | xclip -i -selection clipboard >/dev/null 2>&1"'
# copy to Windows clipboard
if -b 'command -v clip.exe > /dev/null 2>&1' 'bind y run -b "tmux save-buffer - | clip.exe"'
if -b '[ -c /dev/clipboard ]' 'bind y run -b "tmux save-buffer - > /dev/clipboard"'



# C-b INSTEAD of C-a - USED BY VIM ALREADY
unbind C-b
set-option -g prefix C-a
bind-key C-a send-prefix

# USE v AND b INSTEAD OF % AND " FOR SPLITTING WINDOW
unbind '"'
unbind %

bind b split-window -v
bind v split-window -h

# VIM-LIKE KEYBINDINGS FOR SWITCHING PANES.
bind h select-pane -L
bind j select-pane -D
bind k select-pane -U
bind l select-pane -R


# VI(M) COPY/PASTE MODE
# set -g @shell_mode 'vi'
# bind-key -T copy-mode-vi 'y' send-keys -X copy-pipe-and-cancel "xsel -p"

###############################################################################
#
# STATUS BAR
#
###############################################################################

# loud or quiet?
set-option -g visual-activity off
set-option -g visual-bell off
set-option -g visual-silence off
set-window-option -g monitor-activity off
set-option -g bell-action none

#  modes
setw -g clock-mode-colour colour5
setw -g mode-attr bold
setw -g mode-fg colour223
setw -g mode-bg colour235

# panes
set -g pane-border-bg colour0
set -g pane-border-fg colour19
set -g pane-active-border-bg colour0
set -g pane-active-border-fg colour9

# statusbar
set -g status-position top
set -g status-justify left
set -g status-bg colour235
set -g status-fg colour223
set -g status-attr dim
set -g status-left ' #S '
set -g status-right '#[fg=colour223,bg=colour235,bold] %Y-%M-%D %H:%M:%S '
set -g status-right-length 50
set -g status-left-length 20

setw -g window-status-current-fg colour235
setw -g window-status-current-bg colour66
setw -g window-status-current-attr bold
setw -g window-status-current-format ' #I#[fg=colour245]:#[fg=colour255]#W#[fg=colour249]#F '

setw -g window-status-fg colour223
setw -g window-status-bg colour235
setw -g window-status-attr none
setw -g window-status-format ' #I#[fg=colour124]:#[fg=colour250]#W#[fg=colour244]#F '

setw -g window-status-bell-attr bold
setw -g window-status-bell-fg colour14
setw -g window-status-bell-bg colour245

# messages
set -g message-attr bold
set -g message-fg colour108
set -g message-bg colour235

###############################################################################
#
#   OTHER STUFF
#
###############################################################################

# ENABLE MOUES CONTROL (ONLY FOR TMUX 2.1 AND ABOVE)
set -g mouse on

###############################################################################
#
#   PLUGINS
#
###############################################################################

set -g @plugin 'tmux-plugins/tpm'
set -g @plugin 'tmux-plugins/tmux-yank'
set -g @yank_selection 'primary' # or 'secondary' or 'clipboard'
set -g @yank_with_mouse on # or 'off'
set -g @plugin 'tmux-plugins/tmux-sensible'

run '~/.tmux/plugins/tpm/tpm'
